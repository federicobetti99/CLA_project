%% clean
clear
close all
clc

%% import utilities and fix seed
addpath("utils")
rng("default")
rng(0)

%% define number of samples, number of averages
N = 500;
avgs = 5;

%% load matrix and compute exact quantity
datastruct = load("../matrices/nos3.mat");
M = datastruct.Problem.A;
diaginvM = diag(inv(M));
errors = zeros(size(M, 1), N);

%% compute Monte Carlo estimator, averaging for every value of N
for j=1:avgs
    fprintf("Carrying out average %d out of %d \n", j, avgs);
    ests = mc_estimator(M, N);
    ests_avg = ests_avg + ests;
end

ests_avg = ests_avg / avgs;
errors = vecnorm(ests_avg-repmat(diaginvM, 1, N)) / norm(diaginvM);
mean_errors = mean(errors);
std_dev = std(errors) / sqrt(avgs);

%% plot and save figure
fig = figure();
x = (1:N);
fig_legend_string = ["", "$\mathcal{O}(1/\sqrt{N})$"];
loglog(x, errors, 'LineWidth', 4);
hold on
curve1 = errors + std_dev;
curve2 = errors - std_dev;
x2 = [x, fliplr(x)];
inBetween = [curve1, fliplr(curve2)];
fill(x2, inBetween, 'g');
hold on
loglog(x, 10 ./ sqrt(x), 'LineWidth', 2);
hold on
xlabel("$N$", 'interpreter', 'latex', 'FontSize', 15);
ylabel("$\frac{\vert \vert \mathbf{d}_{\mathrm{MC}}^N - diag(A^{-1}) \vert \vert_2}{\vert \vert diag(A^{-1}) \vert \vert_2}$", ...
    'interpreter', 'latex', 'FontSize', 18);
title("Monte Carlo estimator", 'FontSize', 18);
legend(fig_legend_string, 'interpreter', 'latex');
legend('Location', 'northeast', 'FontSize', 18, 'NumColumns', 1);
saveas(fig, "../figures/comparison", "epsc");